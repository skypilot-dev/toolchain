name: Prerelease

on:
  push:
    branches:
      - 'alpha'
      - 'beta'
      - 'next'
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '*.md'
      - 'LICENSE'
      - 'package.json'

jobs:
  prerelease:
    name: Create prerelease

    env:
      BOT_EMAIL: ${{ secrets.SPQR_BOT_EMAIL || 'spqr-bot@users.noreply.github.com' }}
      BOT_NAME: ${{ secrets.SPQR_BOT_NAME || 'SkyPilot Quick-Release Bot' }}
      CI: true
      GPG_KEY: ${{ secrets.SPQR_BOT_GPG_KEY }}
      GPG_KEY_ID: ${{ secrets.SPQR_BOT_GPG_KEY_ID }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SPQR_GITHUB_PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
      - name: Fetch
        run: |
          git fetch --prune --unshallow
          git fetch origin 'master:master'
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > .npmrc
          yarn install --frozen-lockfile --production=false
          yarn add @skypilot/bump-version conventional-changelog-cli@2 finepack@2
          git checkout -- .
      - name: Bump version
        if: success()
        run: yarn --silent bump-version
      - name: Publish
        if: success()
        run: |
          if test -n "$NPM_AUTH_TOKEN" ; then
            yarn config set //registry.yarnpkg.com/:_authToken=$NPM_AUTH_TOKEN
            yarn run publish:default --tag $(git symbolic-ref --short HEAD)
          else
            echo "No NPM_AUTH_TOKEN found. Skipping publication"
          fi
      - name: Configure identity
        if: success()
        run: |
          git config --global user.email $BOT_EMAIL
          git config --global user.name $BOT_NAME
          if test -n "$GPG_KEY" && test -n "$GPG_KEY_ID"; then
            echo "$GPG_KEY" | base64 -d > private.key
            gpg --import ./private.key
            rm ./private.key
            git config --global commit.gpgsign true
            git config --global tag.gpgsign true
            git config --global user.signingkey $GPG_KEY_ID
          else
            echo "GPG_KEY and/or GPG_KEY_ID is undefined in GitHub Secrets. The tag will not be signed."
          fi
      - name: Tag
        if: success()
        run: |
          git tag -a v$(yarn --silent get-current-version) -m "Prerelease $(yarn --silent get-current-version)"
      - name: Push tag
        if: success()
        run: git push --tags
